#[LALR]
grammar<'input>;

use crate::ast;
use crate::tokens::Token;
use crate::lexer::{
    LexicalError,
    Location,
};

pub StringLiteral: ast::StringLiteral<'input> = {
    <s:"string"> => ast::StringLiteral{value: s}
}

extern {
    type Location = Location;
    type Error = LexicalError;

    enum Token<'input> {
        "string" => Token::String(<&'input str>),
        "number" => Token::Number(<f64>),
    }
}